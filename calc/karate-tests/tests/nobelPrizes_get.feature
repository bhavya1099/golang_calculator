# ********RoostGPT********

# Test generated by RoostGPT for test karate-test using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=977dd819cb
# 
# 

# ********RoostGPT********
Feature: API Tests for Nobel Prizes Information Retrieval

  Background:
    * def baseURL = karate.properties['NOBEL_PRIZE_MASTER_DATA_BASE_URL'] || karate.properties['API_HOST']
    * url baseURL
    * headers { Accept: 'application/json' }

  Scenario Outline: Retrieve Nobel Prizes with Valid Query Parameters
    Given path '/2.1/nobelPrizes'
    And param offset = <offset>
    And param limit = <limit>
    And param sort = <sort>
    And param nobelPrizeYear = <nobelPrizeYear>
    And param yearTo = <yearTo>
    And param nobelPrizeCategory = <nobelPrizeCategory>
    And param format = <format>
    And param csvLang = <csvLang>
    When method GET
    Then status 200
    And match response.nobelPrizes == '#[]'
    And match each response.nobelPrizes[*].awardYear == '##number'
    And match each response.nobelPrizes[*].category.en == '##string'
    And match each response.nobelPrizes[*].categoryFullName.en == '##string'
    And match each response.nobelPrizes[*].dateAwarded == '##string'
    And match each response.nobelPrizes[*].prizeAmount == '##number'
    And match each response.nobelPrizes[*].prizeAmountAdjusted == '##number'
    And match each response.nobelPrizes[*].topMotivation.en == '##string'
    And match each response.nobelPrizes[*].laureates[*].id == '#? _ >= 1'
    And match each response.nobelPrizes[*].laureates[*].name.en == '##string'
    And match response.meta.offset == '##number'
    And match response.meta.limit == '##number'
    And match response.meta.count == '##number'
    And match response.links.first == '##string'

    Examples:
      | read('nobelPrizes_get.csv') |

  Scenario: Retrieve Nobel Prizes Without Query Parameters
    Given path '/2.1/nobelPrizes'
    When method GET
    Then status 200
    And match response.nobelPrizes == '#[]'
    And match each response.nobelPrizes[*].awardYear == '##number'
    And match each response.nobelPrizes[*].category.en == '##string'
    And match response.meta.offset == '##number'
    And match response.meta.limit == '##number'
    And match response.meta.count == '##number'

  Scenario: Bad Request for Invalid Syntax
    Given path '/2.1/nobelPrizes'
    And param limit = -1
    When method GET
    Then status 400
    And match response.code == "'##string'"
    And match response.message == "'##string'"

  Scenario: Resource Not Found
    Given path '/2.1/nobelPrizes/nonexistent'
    When method GET
    Then status 404
    And match response.code == "'##string'"
    And match response.message == "'##string'"

  Scenario: Unprocessable Entity
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = 1899
    When method GET
    Then status 422
    And match response.code == "'##string'"
    And match response.message == "'##string'"
